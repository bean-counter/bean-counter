// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BudgetIndex matches snapshot with no accounts 1`] = `
"<Provider store={{...}}>
  <BudgetIndex>
    <WithStyles(ForwardRef(Container)) className=\\"makeStyles-root-1\\">
      <ForwardRef(Container) classes={{...}} className=\\"makeStyles-root-1\\">
        <div className=\\"MuiContainer-root makeStyles-root-1 MuiContainer-maxWidthLg\\">
          <WithStyles(ForwardRef(Grid)) container={true} spacing={3}>
            <ForwardRef(Grid) classes={{...}} container={true} spacing={3}>
              <div className=\\"MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-3\\">
                <WithStyles(ForwardRef(Grid)) item={true} xs={12} className=\\"makeStyles-pageHeader-3\\">
                  <ForwardRef(Grid) classes={{...}} item={true} xs={12} className=\\"makeStyles-pageHeader-3\\">
                    <div className=\\"MuiGrid-root makeStyles-pageHeader-3 MuiGrid-item MuiGrid-grid-xs-12\\">
                      <WithStyles(ForwardRef(Typography)) variant=\\"h5\\">
                        <ForwardRef(Typography) classes={{...}} variant=\\"h5\\">
                          <h5 className=\\"MuiTypography-root MuiTypography-h5\\">
                            Budget history
                          </h5>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                      <div className=\\"makeStyles-filters-4\\">
                        <PopupDateRangePicker ranges={{...}} onChange={[Function: handleSelectDate]} minDate={{...}} maxDate={{...}}>
                          <WithStyles(ForwardRef(Button)) aria-describedby={[undefined]} variant=\\"contained\\" onClick={[Function: handleOpenCalendar]} endIcon={{...}}>
                            <ForwardRef(Button) classes={{...}} aria-describedby={[undefined]} variant=\\"contained\\" onClick={[Function: handleOpenCalendar]} endIcon={{...}}>
                              <WithStyles(ForwardRef(ButtonBase)) className=\\"MuiButton-root MuiButton-contained\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"Mui-focusVisible\\" type=\\"button\\" aria-describedby={[undefined]} onClick={[Function: handleOpenCalendar]}>
                                <ForwardRef(ButtonBase) classes={{...}} className=\\"MuiButton-root MuiButton-contained\\" component=\\"button\\" disabled={false} focusRipple={true} focusVisibleClassName=\\"Mui-focusVisible\\" type=\\"button\\" aria-describedby={[undefined]} onClick={[Function: handleOpenCalendar]}>
                                  <button className=\\"MuiButtonBase-root MuiButton-root MuiButton-contained\\" onBlur={[Function]} onClick={[Function: handleOpenCalendar]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onDragLeave={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={0} type=\\"button\\" disabled={false} aria-describedby={[undefined]}>
                                    <span className=\\"MuiButton-label\\">
                                      Aug 01, 2019
                                       -Â 
                                      Nov 13, 2019
                                      <span className=\\"MuiButton-endIcon MuiButton-iconSizeMedium\\">
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon) classes={{...}}>
                                              <svg className=\\"MuiSvgIcon-root\\" focusable=\\"false\\" viewBox=\\"0 0 24 24\\" color={[undefined]} aria-hidden=\\"true\\" role=\\"presentation\\">
                                                <path d=\\"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z\\" />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                    </span>
                                    <NoSsr>
                                      <WithStyles(undefined) center={false}>
                                        <ForwardRef(TouchRipple) classes={{...}} center={false}>
                                          <span className=\\"MuiTouchRipple-root\\">
                                            <TransitionGroup component={{...}} exit={true} childFactory={[Function: childFactory]} />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(undefined)>
                                    </NoSsr>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                          <WithStyles(ForwardRef(Popover)) id={[undefined]} open={false} anchorEl={{...}} onClose={[Function: handleCloseCalendar]} anchorOrigin={{...}} transformOrigin={{...}}>
                            <ForwardRef(Popover) classes={{...}} id={[undefined]} open={false} anchorEl={{...}} onClose={[Function: handleCloseCalendar]} anchorOrigin={{...}} transformOrigin={{...}}>
                              <ForwardRef(Modal) container={[undefined]} open={false} BackdropProps={{...}} className=\\"MuiPopover-root\\" id={[undefined]} onClose={[Function: handleCloseCalendar]} />
                            </ForwardRef(Popover)>
                          </WithStyles(ForwardRef(Popover))>
                        </PopupDateRangePicker>
                      </div>
                    </div>
                  </ForwardRef(Grid)>
                </WithStyles(ForwardRef(Grid))>
                <WithStyles(ForwardRef(Grid)) item={true} xs={12}>
                  <ForwardRef(Grid) classes={{...}} item={true} xs={12}>
                    <div className=\\"MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12\\">
                      <WithStyles(ForwardRef(Paper)) className=\\"makeStyles-budgetChart-2\\">
                        <ForwardRef(Paper) classes={{...}} className=\\"makeStyles-budgetChart-2\\">
                          <div className=\\"MuiPaper-root MuiPaper-elevation1 makeStyles-budgetChart-2 MuiPaper-rounded\\">
                            <BudgetLineChart data={{...}} categories={{...}} onLegendClick={[Function: handleLegendClick]}>
                              <ResponsiveContainer width=\\"100%\\" height=\\"100%\\" debounce={0}>
                                <div id={[undefined]} className=\\"recharts-responsive-container\\" style={{...}}>
                                  <LineChart data={{...}} margin={{...}} layout=\\"horizontal\\" stackOffset=\\"none\\" barCategoryGap=\\"10%\\" barGap={4} reverseStackOrder={false} width={0} height={0} />
                                  <ResizeDetector handleWidth={true} handleHeight={true} onResize={[Function]} skipOnMount={false} refreshRate={1000} refreshMode={[undefined]} resizableElementId=\\"\\">
                                    <div style={{...}} />
                                  </ResizeDetector>
                                </div>
                              </ResponsiveContainer>
                            </BudgetLineChart>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </div>
                  </ForwardRef(Grid)>
                </WithStyles(ForwardRef(Grid))>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
        </div>
      </ForwardRef(Container)>
    </WithStyles(ForwardRef(Container))>
  </BudgetIndex>
</Provider>"
`;
